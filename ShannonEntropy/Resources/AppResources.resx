<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutUs" xml:space="preserve">
    <value>Acerca de ...</value>
  </data>
  <data name="Alert" xml:space="preserve">
    <value>Alerta</value>
  </data>
  <data name="AllowAccess" xml:space="preserve">
    <value>Por favor permita el acceso</value>
  </data>
  <data name="BigFile" xml:space="preserve">
    <value>El archivo seleccionado sobrepasa los 20 Mbs abrir archivos muy grandes podría causar la interrupción de la aplicación por restricción del sistema operativo o incluso bloquear el dispositivo
¿Continuar?</value>
  </data>
  <data name="BuyMeACoffe" xml:space="preserve">
    <value>Cómprame un café</value>
  </data>
  <data name="CalculateEntropy" xml:space="preserve">
    <value>Calcular</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="ChangeLanguage" xml:space="preserve">
    <value>Cambiar a ingles</value>
  </data>
  <data name="Clean" xml:space="preserve">
    <value>Limpiar</value>
  </data>
  <data name="CleanTextAsk" xml:space="preserve">
    <value>¿Limpiar texto?</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="DevelopedBy" xml:space="preserve">
    <value>Desarrollada por: Jonathan Eduardo G.G</value>
  </data>
  <data name="DevelopedFor" xml:space="preserve">
    <value>Esta App fue desarrollada con la fines didacticos al ilustrar de forma sencilla la entropía de Shannon.</value>
  </data>
  <data name="EquiProbable" xml:space="preserve">
    <value>Eventos equiprobables</value>
  </data>
  <data name="ErrorPickingFile" xml:space="preserve">
    <value>Ocurrio un error abriendo este archivo, prueba con uno diferente...</value>
  </data>
  <data name="Event1" xml:space="preserve">
    <value>Evento #1</value>
  </data>
  <data name="Event2" xml:space="preserve">
    <value>Evento #2</value>
  </data>
  <data name="FrecuencyEntropy" xml:space="preserve">
    <value>Relación frecuencia - entropia</value>
  </data>
  <data name="FrecuencyEntropySubtitle" xml:space="preserve">
    <value>La probabilidad de cada evento en relación con la entropia resultante</value>
  </data>
  <data name="FromPhoto" xml:space="preserve">
    <value>Entropia de una imagen</value>
  </data>
  <data name="FromPhotoSubtitle" xml:space="preserve">
    <value>Una medida de la distribución de probabilidad de los valores de gris</value>
  </data>
  <data name="FromText" xml:space="preserve">
    <value>Entropia de un texto</value>
  </data>
  <data name="FromTextSubtitle" xml:space="preserve">
    <value>Representa el número necesario de bits para codificar el mensaje en un codificador óptimo</value>
  </data>
  <data name="GitHub" xml:space="preserve">
    <value>Dale un vistazo al proyecto en Github</value>
  </data>
  <data name="GrantCamera" xml:space="preserve">
    <value>Permite el acceso a la galeria para que puedas seleccionar fotos de tu dispositivo y calcular su entropia</value>
  </data>
  <data name="GrantPhotos" xml:space="preserve">
    <value>Permite el acceso a la camara para que puedas tomar fotos de tu alrededor y calcular su entropia</value>
  </data>
  <data name="HasDeniedCamera" xml:space="preserve">
    <value>Ha denegado el acceso a su camera, por favor permita el acceso desde ajustes de su dispositivo</value>
  </data>
  <data name="HasDeniedPhotos" xml:space="preserve">
    <value>Ha denegado el acceso a la galeria,por favor permita el acceso desde ajustes de su dispositivo</value>
  </data>
  <data name="HasDeniedStorage" xml:space="preserve">
    <value>Ha denegado el acceso a su almacenamiento por favor permita el acceso desde ajustes de su dispositivo</value>
  </data>
  <data name="HystogramChannel" xml:space="preserve">
    <value>Histograma por canal</value>
  </data>
  <data name="ItsAFileNotAnImage" xml:space="preserve">
    <value>El archivo seleccionado es un archivo de texto ¿Calcular la entropia del texto en su lugar?</value>
  </data>
  <data name="ItsAnImageNotAFile" xml:space="preserve">
    <value>El archivo seleccionado es una imagen, ¿Calcular la entropia de esta imagen en su lugar?</value>
  </data>
  <data name="Licenses" xml:space="preserve">
    <value>Licencias y créditos</value>
  </data>
  <data name="MainTitle" xml:space="preserve">
    <value>Entropía de Shannon</value>
  </data>
  <data name="NotPlainTextFile" xml:space="preserve">
    <value>El archivo seleccionado no es un archivo de texto plano, si continua la lectura puede resultar en resultados inesperados.
¿Continuar?</value>
  </data>
  <data name="OpenFile" xml:space="preserve">
    <value>Seleccionar archivo</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Por favor espere...</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Nunca veremos ni compartiremos tus fotos por ningun medio.</value>
  </data>
  <data name="ReportBug" xml:space="preserve">
    <value>Reportar un bug</value>
  </data>
  <data name="RequestFeature" xml:space="preserve">
    <value>Solicitar una nueva característica</value>
  </data>
  <data name="Samples" xml:space="preserve">
    <value>Ejemplos</value>
  </data>
  <data name="SpecialThanks" xml:space="preserve">
    <value>Agradecimiento especial a "Tapia Sanchez Daniel" por su excelente labor docente.</value>
  </data>
  <data name="TakePhoto" xml:space="preserve">
    <value>Tomar fotografía</value>
  </data>
  <data name="Theory" xml:space="preserve">
    <value>Fundamento teórico</value>
  </data>
  <data name="Theory01" xml:space="preserve">
    <value>En teória de la información, la </value>
  </data>
  <data name="Theory02" xml:space="preserve">
    <value>entropía </value>
  </data>
  <data name="Theory03" xml:space="preserve">
    <value>de una variable aleatoria es el promedio de la "información", "sorpresa" o "incierta" inherente a los posibles resultados de la variable. El concepto the entropía de la información fue introducido por </value>
  </data>
  <data name="Theory04" xml:space="preserve">
    <value>en su artículo de 1948 "A Mathematical Theory of Communication" y frecuentemente es llamada </value>
  </data>
  <data name="Theory05" xml:space="preserve">
    <value>entropía de Shannon </value>
  </data>
  <data name="Theory06" xml:space="preserve">
    <value>en su honor. </value>
  </data>
  <data name="Theory07" xml:space="preserve">
    <value>Como ejemplo, considere una moneda con probabilidad p de caer en cara y probabilidad 1-p de caer en cruz.La entropía máxima es para p = 1/2, cuando no hay razón para esperar un resultado sobre otro, y en este caso, el lanzamiento de una moneda tiene una entropía de un bit. La entropía mínima es cuando p = 0 o p = 1, cuando el evento es conocido y la entropía es cero bits. Otros valores de p dan diferentes entropías entre cero y uno bits. </value>
  </data>
  <data name="Theory08" xml:space="preserve">
    <value>Fórmula</value>
  </data>
  <data name="Theory09" xml:space="preserve">
    <value>Dada una variable discreta aleatoria </value>
  </data>
  <data name="Theory10" xml:space="preserve">
    <value>, con posibles resultados </value>
  </data>
  <data name="Theory11" xml:space="preserve">
    <value>, que ocurren con probabilidad </value>
  </data>
  <data name="Theory12" xml:space="preserve">
    <value>la entropía de </value>
  </data>
  <data name="Theory13" xml:space="preserve">
    <value>esta formalmente definida como: </value>
  </data>
  <data name="Theory14" xml:space="preserve">
    <value>donde Sigma denota la suma de los posibles valores de la variable y log es el logaritmo, la elección de la base varía entre las diferentes aplicaciones. La base 2 da la unidad de bits (o "shannons"), mientras que la base e da las "unidades naturales" nat, y la base 10 da una unidad llamada "dits", "bans" o "hartleys". </value>
  </data>
  <data name="TotalEntropy" xml:space="preserve">
    <value>Entropia total</value>
  </data>
  <data name="WaitASecond" xml:space="preserve">
    <value>Un momento...</value>
  </data>
  <data name="WeAreSorry" xml:space="preserve">
    <value>Lo sentimos...</value>
  </data>
  <data name="Xamarin" xml:space="preserve">
    <value>Creado con la tecnología multiplataforma Xamarin.Forms</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Sí</value>
  </data>
  <data name="YouCanDisableThis" xml:space="preserve">
    <value>*Puede modificar el acceso en cualquier momento desde la aplicación de ajustes.</value>
  </data>
</root>